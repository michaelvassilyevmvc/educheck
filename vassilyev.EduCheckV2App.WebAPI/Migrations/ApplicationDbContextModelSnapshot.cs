// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vassilyev.EduCheckV2App.WebAPI.Data;

#nullable disable

namespace vassilyev.EduCheckV2App.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.AnswerOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerOptions");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.SessionStats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CorrectAnswers")
                        .HasColumnType("integer");

                    b.Property<int>("IncorrectAnswers")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserSessionId")
                        .IsUnique();

                    b.ToTable("SessionStats");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.AnswerOption", b =>
                {
                    b.HasOne("vassilyev.EduCheckV2App.WebAPI.Entities.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.Question", b =>
                {
                    b.HasOne("vassilyev.EduCheckV2App.WebAPI.Entities.Topic", "Topic")
                        .WithMany("Questions")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.SessionStats", b =>
                {
                    b.HasOne("vassilyev.EduCheckV2App.WebAPI.Entities.UserSession", "UserSession")
                        .WithOne("Stats")
                        .HasForeignKey("vassilyev.EduCheckV2App.WebAPI.Entities.SessionStats", "UserSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserSession");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.UserSession", b =>
                {
                    b.HasOne("vassilyev.EduCheckV2App.WebAPI.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vassilyev.EduCheckV2App.WebAPI.Entities.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.Topic", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.User", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("vassilyev.EduCheckV2App.WebAPI.Entities.UserSession", b =>
                {
                    b.Navigation("Stats")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
